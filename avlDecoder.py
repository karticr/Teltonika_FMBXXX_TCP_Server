import binascii,datetime,math,json

from IO_decoder import IODecoder

io  = IODecoder()
class avlDecoder():
    def __init__(self):
        self.raw_data = ""
        self.initVars()

    def initVars(self):            # initilizing variables
        self.codecid        = 0
        self.no_records_i   = 0
        self.no_records_e   = 0
        self.crc_16         = 0
        self.computecrcvalue= 0
        self.avl_entries    = []
        self.avl_latest     = ""
        self.d_time_unix    = 0 
        self.d_time_local   = ""
        self.avl_io_raw     = ""
        self.priority       = 0
        self.lon            = 0
        self.lat            = 0
        self.alt            = 0
        self.angle          = 0
        self.satellites     = 0
        self.speed          = 0
        self.decoded_io     = {}

    def decodeAVL(self, data):
#        print('data',data)
        self.raw_data      = data
        self.data_field_l  = int(data[8:16],16)*2                                # Data Field Length – size is calculated starting from Codec ID to Number of Data 2.
        self.total_io_size = self.data_field_l-4-2                               #-4=> subtract codecid and no of data, -2=> no of data at the end.
        self.io_end        = 20+self.total_io_size                               # 20=> start from timestamp
        self.codecid       = int(data[16:18], 16)                                # codecid
        self.computecrcvalue = self.computecrc(data[16:-8])                     # computed crc value (not sure what data to feed it yet)
        self.no_record_i   = int(data[18:20], 16)                                # first no of total records
        self.no_record_e   = int(data[-10:-8], 16)                               # no of total records before crc-16 check
        self.crc_16        = int(data[-8:],16)                                   # crc-16 check
        self.first_io_start= 20                                                  # first io starting pos
        self.first_io_end  = math.ceil(self.total_io_size/ self.no_record_e)     # end pos for first io entry
        


        if(self.codecid == 142 and (self.no_record_i == self.no_record_e)): # 142 is decimal representation of 8E, codec 8 Extended
            # record_entries     = data[20:-10]                                    # entry data
            record_entries = data[self.first_io_start: self.io_end ]               # entry data

            entries_size     = len(record_entries)                                 # total no of entries
            division_size    = int(len(record_entries)/ self.no_record_i)          # division size
            self.avl_entries = []

#            print("old size:", entries_size, "division:", division_size)
#            print("new size:", self.total_io_size, "division:", self.total_io_size/ self.no_record_e)

            for i in range(0, entries_size, division_size): 
                self.avl_entries.append(record_entries[i:i+division_size])         # splitting into chunks
            
            self.avl_latest   = record_entries[0:self.first_io_end]                # latest avl data packets
            
#            self.avl_latest_1   = self.avl_entries[0]    # Not used anywhere

#            print("________________________________________")
#            print("old:", self.avl_entries[0])
#            print("new:", self.avl_latest)
#            print("‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾")

            self.d_time_unix  = int(self.avl_latest[0:16],16)                      # device time unix
            self.d_time_local = self.unixtoLocal(self.d_time_unix)                 # device time local
            self.priority     = int(record_entries[16:18], 16)                     # device data priority
#            self.lon          = int(record_entries[18:26], 16)                     # longitude
            self.lon          = (int(record_entries[18:26], 16)-(1<<32))/10000000                     # longitude
            self.lat          = int(record_entries[26:34], 16)/10000000                     # latitude
            self.alt          = int(record_entries[34:38], 16)                     # altitude
            self.angle        = int(record_entries[38:42], 16)                     # angle
            self.satellites   = int(record_entries[42:44], 16)                     # no of satellites
            self.speed        = int(record_entries[44:48], 16)                     # speed
            self.avl_io_raw   = self.avl_latest[48:]                               # avl io data raw
#            print("raw io",self.avl_io_raw)                                       
            self.decoded_io   = io.dataDecoder(self.avl_io_raw)                    # decoded avl data
            self.translatedio = self.datatranslator(self.decoded_io)
#            print('self.decoded_io',self.decoded_io)

            return self.getAvlData()
        else:
            print('self.codecid',self.codecid)
            print('self.no_record_i',self.no_record_i)
            print('self.no_record_e',self.no_record_e)
            return -1
 
    def getDateTime(self):                                                         # system time
        return datetime.datetime.now().strftime("%d/%m/%Y %H:%M:%S")

    def unixtoLocal(self, unix_time):                                              # unix to local time
        time = datetime.datetime.fromtimestamp(unix_time/1000)
        return f"{time:%Y-%m-%d %H:%M:%S}"

    
    def getAvlData(self):
        data = {
            "sys_time"   : self.getDateTime(),
            "codecid"    : self.codecid,
            "no_record_i": self.no_record_i,
            "no_record_e": self.no_record_e,
            "crc-16"     : self.crc_16,
            "compute-crc": self.computecrcvalue,
            # "avl_entries": self.avl_entries,
            # "avl_latest" : self.avl_latest,
            "d_time_unix" : self.d_time_unix,
            "d_time_local": self.d_time_local,
            "priority"    :self.priority,  
            "lon"         :self.lon,
            "lat"         :self.lat,
            "alt"         :self.alt,       
            "angle"       :self.angle,     
            "satellites"  :self.satellites,
            "speed"       :self.speed,
            "io_data"     :self.decoded_io    
        }
        return data

    def datatranslator(self, decodedio):
        translator = {
            
        }

    def getRawData(self):
        return self.raw_data

    def computecrc(self,crcable):
        crc = binascii.crc_hqx(crcable,0)
        return(crc)

if __name__ == "__main__":
    avl = avlDecoder()
    flespirecs = {
        'Data received(13/01/2024 08:14:42 size: 1185B tcp)':b
        'Data received(13/01/2024 08:14:45 size: 1185B tcp)':b'00000000000004958E0A0000018D034B410000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230200043101E000900AC0011FC13001200990013FC33000600AC000200F10004BC8A00100004DF1F000000000000018D034BB63000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042302B0043101E000900AC0011FC09001200990013FC33000600AC000200F10004BC8A00100004DF1F000000000000018D034C2B6000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303D0043101E000900AC0011FC1A0012009E0013FC2A000600AC000200F10004BC8A00100004DF1F000000000000018D034CA09000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230450043101E000900AC0011FC150012009A0013FC2C000600AC000200F10004BC8A00100004DF1F000000000000018D034D15C000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230410043101E000900AC0011FC0A001200980013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D034D8AF000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230380043101E000900AC0011FC090012009B0013FC32000600AC000200F10004BC8A00100004DF1F000000000000018D034E002000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230410043101E000900AC0011FC060012009C0013FC2F000600AC000200F10004BC8A00100004DF1F000000000000018D034E755000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230340043101E000900AC0011FC0A0012009D0013FC32000600AC000200F10004BC8A00100004DF1F000000000000018D034EEA8000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC0B001200950013FC24000600AC000200F10004BC8A00100004DF1F000000000000018D034F5FB000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230430043101E000900AC0011FC130012009A0013FC2E000600AC000200F10004BC8A00100004DF1F000000000A0000F6B9',
        'Data received(13/01/2024 08:14:45 size: 1185B tcp)':b
        'Data received(13/01/2024 08:14:46 size: 1185B tcp)':b'00000000000004958E0A0000018D035468C000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC0A001200A10013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D0354DDF000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230200043101E000900AC0011FC1A0012009F0013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D0355532000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC08001200910013FC38000600AC000200F10004BC8A00100004DF1F000000000000018D0355C85000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC090012009D0013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D03563D8000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303D0043101E000900AC0011FC160012009B0013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D0356B2B000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230470043101E000900AC0011FC090012009D0013FC31000600AC000200F10004BC8A00100004DF1F000000000000018D035727E000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC12001200960013FC31000600AC000200F10004BC8A00100004DF1F000000000000018D03579D1000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303F0043101E000900AC0011FC03001200950013FC27000600AC000200F10004BC8A00100004DF1F000000000000018D0358124000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303A0043101E000900AC0011FC07001200930013FC32000600AC000200F10004BC8A00100004DF1F000000000000018D0358877000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230430043101E000900AC0011FC090012009B0013FC31000600AC000200F10004BC8A00100004DF1F000000000A00004005',
        'Data received(13/01/2024 08:14:46 size: 1185B tcp)':b'00000000000004958E0A0000018D0358FCA000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230200043101E000900AC0011FC14001200A20013FC28000600AC000200F10004BC8A00100004DF1F000000000000018D035971D000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303F0043101E000900AC0011FC0A0012009E0013FC32000600AC000200F10004BC8A00100004DF1F000000000000018D0359E70000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042302B0043101E000900AC0011FC06001200900013FC38000600AC000200F10004BC8A00100004DF1F000000000000018D035A5C3000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230410043101E000900AC0011FC06001200A00013FC33000600AC000200F10004BC8A00100004DF1F000000000000018D035AD16000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303D0043101E000900AC0011FC0A0012009D0013FC30000600AC000200F10004BC8A00100004DF1F000000000000018D035B469000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230410043101E000900AC0011FC050012009D0013FC31000600AC000200F10004BC8A00100004DF1F000000000000018D035BBBC000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303D0043101E000900AC0011FC090012009C0013FC2E000600AC000200F10004BC8A00100004DF1F000000000000018D035C30F000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230340043101E000900AC0011FC130012009A0013FC32000600AC000200F10004BC8A00100004DF1F000000000000018D035CA62000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C000007004230320043101E000900AC0011FC0B001200990013FC28000600AC000200F10004BC8A00100004DF1F000000000000018D035D1B5000C16B933A17B668270000000000000000000016000D00EF0000F00000150500C80300450300010000B30000020000030000B400007164010701017C0000070042303D0043101E000900AC0011FC10001200970013FC33000600AC000200F10004BC8A00100004DF1F000000000A00000E95',
        'Data received(13/01/2024 08:14:46 size: 1185B tcp)':b
        'Data received(13/01/2024 08:14:47 size: 600B tcp)':b
        'Data received(13/01/2024 08:15:47 size: 249B tcp)':b
        'Data received(13/01/2024 18:52:15 size: 483B tcp)':b
        'red truck':b'00000000000001558e010000018d035ac99001c15da68317cd3596067700000f00000000003c001600ef0000f00000150400c80000450100010000b30000020000030000b400007164010701017c00005100005200005957006f0000980000a00300e80000eb0000fa00001300b5000d00b6000700422f79001800000043106a000900ae001100000012ffc70013ffeb000600ae000f03e80054000000550000005a0000006e000000700000007303840097000000a80000000d00f10004bc8a00c70000000000100015d7d800530000000000570c4c50c0006400003880006600000000006700000000006900129c8d006b00000644007b00000000008600000000013000000000000500650000000000000000008400800010300004050205000080818004003002060000000000000000020700000000000000000001011a001a55303432322d30302c55303235332d30302c42313046312d3134010000ec2d'

    }

    for key,value in flespirecs.items():
        print('\n\n')
        res = avl.decodeAVL(value)
        print(key)
#        print(json.dumps(res['io_data'],indent=2))
        print(res)

'''
    # this one has satellites and altitude and stuff
    data = b'00000000000000918e010000018cff2d063000c16b933a17b66827064c00000d00000000001c000e00ef0000f00000150500c80000450100010000b30000020000030000b400007164010701017c0000fa00000b00b5000a00b60007004230200018000000431023000900ac0011fc14001200a40013fc2c000600ac000f0000000300f10004bc8a00c70000000000100004df1f00000000010000e0ce'
    # from red truck. Still haven't figured out how to stich records together
    data = b'00000000000001558e010000018d035ac99001c15da68317cd3596067700000f00000000003c001600ef0000f00000150400c80000450100010000b30000020000030000b400007164010701017c00005100005200005957006f0000980000a00300e80000eb0000fa00001300b5000d00b6000700422f79001800000043106a000900ae001100000012ffc70013ffeb000600ae000f03e80054000000550000005a0000006e000000700000007303840097000000a80000000d00f10004bc8a00c70000000000100015d7d800530000000000570c4c50c0006400003880006600000000006700000000006900129c8d006b00000644007b00000000008600000000013000000000000500650000000000000000008400800010300004050205000080818004003002060000000000000000020700000000000000000001011a001a55303432322d30302c55303235332d30302c42313046312d3134010000ec2d'
    # data = b'000000000000004308020000016B40D57B480100000000000000000000000000000001010101000000000000016B40D5C198010000000000000000000000000000000101010101000000020000252C'
    avl = avlDecoder()
    res = avl.decodeAVL(data)
    print(json.dumps(res,indent=2))
    # avldata = avl.getAvlData()
    # print(avldata)
'''

